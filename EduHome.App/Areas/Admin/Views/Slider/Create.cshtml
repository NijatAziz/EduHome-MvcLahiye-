@model EduHome.Core.DTOS.Slider.SliderPostDto

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>SliderGetDto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Slider Image</label>
                <input asp-for="ImageUrl" class="form-control img-input" placeholder="New Image">
                <span class="text text-danger" asp-validation-for="ImageUrl"></span>
                <div style="width:200px" class="img-preview-container"></div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    const imgInput = document.querySelector('.img-input');
    const imgPreviewContainer = document.querySelector('.img-preview-container');

    imgInput.addEventListener('change', (e) => {
        imgPreviewContainer.innerHTML = '';

        for (const file of e.target.files) {
            const imgDiv = document.createElement('div');
            imgDiv.setAttribute('class', 'img-preview');

            const img = document.createElement('img');
            img.style.width = "100%";
            const blobUrl = URL.createObjectURL(file);
            img.setAttribute('src', blobUrl);
            imgDiv.appendChild(img);

            imgPreviewContainer.appendChild(imgDiv);
        }
    });
</script>